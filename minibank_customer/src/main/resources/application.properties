spring.application.name=minibank-customer

server.port = 8076
server.servlet.context-path = /minibank/customer

#Swagger
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.packages-to-scan=com.minibank.customer.controller

#postreSQL
spring.datasource.driverClassName = net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url = jdbc:log4jdbc:postgresql://${POSTGRES}:5432/customer
spring.datasource.username = postgres
spring.datasource.password = admin1234


##DB init
spring.sql.init.encoding=UTF-8
spring.sql.init.mode=always
spring.sql.init.schema-locations = classpath:sql/MINIBANK_CUSTOMER_DDL.sql
spring.sql.init.data-locations = classpath:sql/MINIBANK_CUSTOMER_DML.sql

#mybatis
mybatis.type-aliases-package = com.minibank.customer.domain.entity
mybatis.mapper-locations = classpath:sql/*.xml
mybatis.configuration.map-underscore-to-camel-case = true

# Accont API URL
#account.api.url = http://${ACCOUNT}:8075/minibank/account
account.api.url = http://${ACCOUNT}/minibank/account

# Transfer API URL
#transfer.api.url = http://${TRANSFER}:8074/minibank/transfer
transfer.api.url = http://${TRANSFER}/minibank/transfer

# 별도 feign client에 이름을 지정하지 않고 default로 지정해서 모든 클라이언트에 동일한 속성 사용
# connection try timeout 설정 30초
# connection read timeout(최대 작업 시간) 설정 30초
feign.circuitbreaker.enabled= true
feign.client.config.default.connect-timeout=30000
# connection read timeout(최대 작업 시간) 설정 30초
feign.client.config.default.read-timeout=30000

resilience4j.circuitbreaker.configs.default.slow-call-duration-threshold= 30000

#eureka
# Eureka Server에 IP로 서비스 등록
eureka.instance.prefer-ip-address= true 
# Eureka Server 주소 입력
eureka.client.service-url.defaultZone= http://${EUREKA}:8761/eureka

#### environment ####
ACCOUNT=minibank-account
APIGATEWAY=localhost
B2BT=minibank-b2bt
CQRS=minibank-cqrs
CUSTOMER=minibank-customer
EUREKA=localhost
KAFKA=localhost
POSTGRES=localhost
TRANSFER=minibank-transfer